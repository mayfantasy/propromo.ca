query GetCustomer($customerAccessToken: String!) {
  customer(customerAccessToken: $customerAccessToken) {
    ...customerFields
  }
}

mutation Login($input: CustomerAccessTokenCreateInput!) {
  customerAccessTokenCreate(input: $input) {
    customerAccessToken {
      accessToken
      expiresAt
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation Logout($customerAccessToken: String!) {
  customerAccessTokenDelete(customerAccessToken: $customerAccessToken) {
    deletedAccessToken
    deletedCustomerAccessTokenId
    userErrors {
      field
      message
    }
  }
}

mutation CreateCustomer($input: CustomerCreateInput!) {
  customerCreate(input: $input) {
    customer {
      ...customerFields
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation CreateCustomerAddress(
  $customerAccessToken: String!
  $address: MailingAddressInput!
) {
  customerAddressCreate(
    customerAccessToken: $customerAccessToken
    address: $address
  ) {
    customerAddress {
      id
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation UpdateCustomerAddress(
  $customerAccessToken: String!
  $id: ID!
  $address: MailingAddressInput!
) {
  customerAddressUpdate(
    customerAccessToken: $customerAccessToken
    id: $id
    address: $address
  ) {
    customerAddress {
      ...addressFields
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation UpdateCustomer(
  $customerAccessToken: String!
  $customer: CustomerUpdateInput!
) {
  customerUpdate(
    customerAccessToken: $customerAccessToken
    customer: $customer
  ) {
    customer {
      id
    }
    customerAccessToken {
      accessToken
      expiresAt
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

mutation SetCustomerDefaultAddress(
  $customerAccessToken: String!
  $addressId: ID!
) {
  customerDefaultAddressUpdate(
    customerAccessToken: $customerAccessToken
    addressId: $addressId
  ) {
    customer {
      id
    }
    customerUserErrors {
      code
      field
      message
    }
  }
}

fragment customerFields on Customer {
  id
  displayName
  email
  firstName
  lastName
  phone
  acceptsMarketing
  defaultAddress {
    ...addressFields
  }
  phone
  lastIncompleteCheckout {
    ...checkoutFields
  }
}
